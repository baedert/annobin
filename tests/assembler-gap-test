#!/bin/bash

# Copyright (c) 2018 Red Hat.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 3, or (at your
# option) any later version.
#
# It is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


# Test building an assembler source file without creating a gap in the notes.

rm -f hello.o hello2.o
rm -f gap1.o assembler-gap-test1.exe assembler-gas-test1.out
rm -f gap2.o assembler-gap-test2.exe assembler-gas-test2.out

GAS=as
# GAS=/work/builds/binutils/current/x86_64-pc-linux-gnu/gas/as-new 
GCC=gcc
READELF=readelf
ANNOCHECK=../annocheck/annocheck

PLUGIN=../plugin/.libs/annobin.so
PLUGIN_OPTS="-fplugin-arg-annobin-no-attach"

# Assemble the file, and include debug information which will
# identify the producer as being AS.

$GAS --gdwarf-2 $srcdir/gap.S -o gap1.o

# Compile a C source file as well, so that we end up with a binary
# that was partially built by GCC, and partially not.  Note - we
# are not using all of the hardening options as we want to be sure
# that annocheck will notice.

$GCC -fplugin=$PLUGIN $PLUGIN_OPTS -c -O2 -fPIC $srcdir/hello2.c 
$GCC -fplugin=$PLUGIN $PLUGIN_OPTS -c -O2 -fPIC $srcdir/hello.c 

# Link the assembler file betwween the two C files, so that there
# will be a gap in the notes.

$GCC -nostartfiles -e 0 hello.o gap1.o hello2.o -o assembler-gap-test1.exe \
     -Wl,--defsym,extern_func2=0 \
     -Wl,--defsym,extern_func3=0 \
     -Wl,-z,now -pie

# FIXME - we should check that the notes were parsed correctly...
$ANNOCHECK -v --enable-builtby --all assembler-gap-test1.exe > assembler-gap-test1.out

# FAIL if a gap is NOT reported
grep --silent -e "Gaps were detected" assembler-gap-test1.out
if [ $? != 0 ];
then
    echo "assembler-gap-test: FAIL: GAP *not* found in notes:"
    cat assembler-gap-test1.out
    exit 1
fi

# Repeat the test, but this time, instead of generating debug inofrmation
# generate a note.

$GAS --generate-missing-build-notes=yes $srcdir/gap.S -o gap2.o
if [ $? != 0 ];
then
    echo "Assembler does not support generating build notes.  Skipping test."
    exit 0
fi

$GCC -nostartfiles -e 0 hello.o gap2.o hello2.o -o assembler-gap-test2.exe \
     -Wl,--defsym,extern_func2=0 \
     -Wl,--defsym,extern_func3=0 \
     -Wl,-z,now -pie

# FIXME - we should check that the notes were parsed correctly...
$ANNOCHECK -v assembler-gap-test2.exe > assembler-gap-test2.out

# FAIL if a gap is NOT reported
grep --silent -e "No gaps found" assembler-gap-test2.out
if [ $? != 0 ];
then
    echo "assembler-gap-test: FAIL: GAP found in notes:"
    cat assembler-gap-test2.out
    exit 1
fi


