.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ANNOCHECK 1"
.TH ANNOCHECK 1 "2018-06-06" "annobin-1" "RPM Development Tools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
annocheck \- Analysing an application's compilation.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
annocheck
  [\fB\-\-help\fR]
  [\fB\-\-version\fR]
  [\fB\-\-verbose\fR]
  [\fB\-\-quiet\fR]
  [\fB\-\-ignore\-unknown\fR]
  [\fB\-\-dwarf\-dir=\fR\fIdir\fR]
  [\fB\-\-prefix=\fR\fItext\fR]
  \fIfile\fR...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBannocheck\fR program can analyse programs and report
information about them.  It is designed to be modular, with a set of
self-contained tools providing the checking functionality.
Currently the following tools are implemented:
.PP
The \fBannocheck\fR program is able to scan inside rpm files and
libraries.  It will automatically recurse into any directories that
are specified on the command line.  In addition \fBannocheck\fR
knows how to find debug information held in separate debug files, and
it will search for these whenever it is checking debug information.
.PP
The program supports some generic command line options that are used
regardless of which tools are enabled.
.ie n .IP """\-\-dwarf\-dir=\fIdir\fP""" 4
.el .IP "\f(CW\-\-dwarf\-dir=\f(CIdir\f(CW\fR" 4
.IX Item "--dwarf-dir=dir"
Look in \fIdir\fR for separate dwarf debug information files
.ie n .IP """\-\-help""" 4
.el .IP "\f(CW\-\-help\fR" 4
.IX Item "--help"
Display this message & exit.
.ie n .IP """\-\-ignore\-unknown""" 4
.el .IP "\f(CW\-\-ignore\-unknown\fR" 4
.IX Item "--ignore-unknown"
Do not complain about unknown file types.
.ie n .IP """\-\-prefix=\fItext\fP""" 4
.el .IP "\f(CW\-\-prefix=\f(CItext\f(CW\fR" 4
.IX Item "--prefix=text"
Include \fItext\fR in the output description.
.ie n .IP """\-\-quiet""" 4
.el .IP "\f(CW\-\-quiet\fR" 4
.IX Item "--quiet"
Do not print anything, just return an exit status.
.ie n .IP """\-\-verbose""" 4
.el .IP "\f(CW\-\-verbose\fR" 4
.IX Item "--verbose"
Produce informational messages whilst working.  Repeat for more
information.
.ie n .IP """\-\-version""" 4
.el .IP "\f(CW\-\-version\fR" 4
.IX Item "--version"
Report the version of the tool and then exit.
.PP
This tool checks that the specified files were compiled with the
required security hardening options, as outlined in the elf-policy
document.  Currently the tool checks for these features:
.ie n .IP """BIND_NOW""" 4
.el .IP "\f(CWBIND_NOW\fR" 4
.IX Item "BIND_NOW"
Lazy binding must have been enabled via the linker option \fB\-z
now\fR.
.ie n .IP """Non executable stack""" 4
.el .IP "\f(CWNon executable stack\fR" 4
.IX Item "Non executable stack"
The program must not have a stack in an executable region of memory.
.ie n .IP """Safe GOT relocations""" 4
.el .IP "\f(CWSafe GOT relocations\fR" 4
.IX Item "Safe GOT relocations"
The relocations for the \s-1GOT\s0 table must be read only.
.ie n .IP """No WX segments.""" 4
.el .IP "\f(CWNo WX segments.\fR" 4
.IX Item "No WX segments."
No program segment should have all three of the read, write and
execute permission bits set.
.ie n .IP """No text relocations""" 4
.el .IP "\f(CWNo text relocations\fR" 4
.IX Item "No text relocations"
The should be no relocations against executable code.
.ie n .IP """Correct runpaths""" 4
.el .IP "\f(CWCorrect runpaths\fR" 4
.IX Item "Correct runpaths"
The runpath information used to locate shared libraries at runtime
must only include directories rooted at \fI/usr\fR.
.ie n .IP """Missing annobin data""" 4
.el .IP "\f(CWMissing annobin data\fR" 4
.IX Item "Missing annobin data"
The program must have been compiled with annobin notes enabled.
.ie n .IP """Strong stack protection""" 4
.el .IP "\f(CWStrong stack protection\fR" 4
.IX Item "Strong stack protection"
The program must have been compiled with the \f(CW@option\fR
{\-fstack\-protector\-strong} option enabled, and with
\&\fB\-D_FORTIFY_SOURCE=2\fR specified.  It must also have been
compiled at at least optimization level 2.
.ie n .IP """Dynamic data present""" 4
.el .IP "\f(CWDynamic data present\fR" 4
.IX Item "Dynamic data present"
Dynamic executables must have a dynamic segment.
.ie n .IP """Position Independent compilation""" 4
.el .IP "\f(CWPosition Independent compilation\fR" 4
.IX Item "Position Independent compilation"
Shared libraries must have been compiled with \fB\-fPIE\fR and
dynamic executables must have been compiled with \fB\-fPIC\fR.
.ie n .IP """Safe exceptions""" 4
.el .IP "\f(CWSafe exceptions\fR" 4
.IX Item "Safe exceptions"
Program which use exception handling must have been compiled with
\&\fB\-fexceptions\fR enabled and with \fB\-D_GLIBCXX_ASSERTIONS\fR
specified.
.ie n .IP """Stack Clash protection""" 4
.el .IP "\f(CWStack Clash protection\fR" 4
.IX Item "Stack Clash protection"
If available the \f(CW@option\fR {\-fstack\-clash\-protection} must have been
used.
.ie n .IP """Control Flow protection""" 4
.el .IP "\f(CWControl Flow protection\fR" 4
.IX Item "Control Flow protection"
If available the \fB\-fcf\-protection=full\fR must have been used.
.ie n .IP """Stack realignment""" 4
.el .IP "\f(CWStack realignment\fR" 4
.IX Item "Stack realignment"
For \fIi686\fR binaries, the \fB\-mstackrealign\fR option must have
been specified.
.PP
The tool does support a couple of command line options:
.ie n .IP """\-\-enable\-hardened""" 4
.el .IP "\f(CW\-\-enable\-hardened\fR" 4
.IX Item "--enable-hardened"
Enable the tool if it was previously disabled.
.ie n .IP """\-\-disable\-hardened""" 4
.el .IP "\f(CW\-\-disable\-hardened\fR" 4
.IX Item "--disable-hardened"
Disable the tool.
.ie n .IP """\-\-ignore\-gaps""" 4
.el .IP "\f(CW\-\-ignore\-gaps\fR" 4
.IX Item "--ignore-gaps"
Ignore gaps in the annobin data.
.PP
The \fIbuilt-by\fR tool is disabled by default, but it can be enabled
by the command line option \fB\-\-enable\-builtby\fR.  The tool
checks the specified files to see if any information is stored about
how the file was built.
.PP
The tool supports a few command line options to customise its
behaviour:
.ie n .IP """\-\-all""" 4
.el .IP "\f(CW\-\-all\fR" 4
.IX Item "--all"
Report all builder identification strings.  The tool has several
different heuristics for determining the builder.  By default it will
report the information return by the first successful heuristic.  If
the \fB\-\-all\fR option is enabled then all successful results will
be returned.
.ie n .IP """\-\-tool=\fIname\fP""" 4
.el .IP "\f(CW\-\-tool=\f(CIname\f(CW\fR" 4
.IX Item "--tool=name"
This option can be used to restrict the output to only those files
which were built by a specific tool.  This can be useful when scanning
a directory full of files searching for those built by a particular
compiler.
.ie n .IP """\-\-nottool=\fINAME\fP""" 4
.el .IP "\f(CW\-\-nottool=\f(CINAME\f(CW\fR" 4
.IX Item "--nottool=NAME"
This option can be used to restrict the output to only those files
which were not built by a specific tool.  This can be useful when
scanning a directory full of files searching for those that were not
built by a particular compiler.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2018 Red Hat.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the \s-1GNU\s0 Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"\s-1GNU\s0 Free Documentation License\*(R".
